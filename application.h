#ifndef APPLICATION_H
#define APPLICATION_H

#include "commonincludings.h"
#include "iapplication.h"

//! Implements application class, starting program point after main() function call.
class Application : public IApplication
{
public:
    Application( const QString &description = "Empty description" );//! Default constructor.
    Application( const Application &application );                  //! Copying constructor.

    virtual ~Application() {}

    const Application & operator = (const Application &application);//! Operator " =  ".
    Application & operator() () noexcept(false);                    //! Operator " () ", calls run() method, returns application object.

    virtual void run() noexcept(false) override;                    //! Runs application object.

public:
    const QString & getDescription() const { return m_description; }//! Returns application object description.
    void setDescription(const QString &description);                //! Sets application object description.

public:
    static uint getCounter() { return counter; }                    //! Returns number of created application objects.

private:
    static uint counter;   //! Counter of created application objects.

private:
    uint     m_name;       //! Autogenerated application object name.

    QString  m_description;//! Description of application object.
};

#endif // APPLICATION_H
