#ifndef RENDERTARGET_H
#define RENDERTARGET_H

#include "commonincludings.h"

//! Implements render target for scene renderer. Contains textures ids and color attachments.
class RenderTarget
{
public:
    RenderTarget();                                                 //! Default constructor.

    RenderTarget( const RenderTarget &target );                     //! Copying constructor.

    virtual ~RenderTarget() {}

    const RenderTarget & operator = (const RenderTarget & target);  //! Operator " =  ".
    bool  operator == (const RenderTarget &target) const;           //! Operator " == ".
    bool  operator != (const RenderTarget &target) const;           //! Operator " != ".

public:
    const QHash<com_defs::TargetTextures::Textures, GLuint> & getTexturesIds() const { return m_texturesIds; }//! Returns render target textures ids.
    QHash<com_defs::TargetTextures::Textures, GLuint> & getTexturesIds() { return m_texturesIds; }            //! Returns render target textures ids, overloaded function.
    void setTexturesIds(const QHash<com_defs::TargetTextures::Textures, GLuint> &texturesIds);                //! Sets render target textures ids.

    const QHash<com_defs::TargetTextures::Textures, GLenum> & getAttachments() const { return m_attachments; }//! Returns render target textures attachments.
    QHash<com_defs::TargetTextures::Textures, GLenum> & getAttachments() { return m_attachments; }            //! Returns render target textures attachments, overloaded function.
    void setAttachments(const QHash<com_defs::TargetTextures::Textures, GLenum> &attachments);                //! Sets render target textures attachments.

    GLuint getName() const { return m_name; }       //! Returns autogenerated render target name.

public:
    static GLuint getCounter() { return counter; }  //! Returns number of created render target objects.

private:
    static GLuint counter;      //! Counter of created render target objects.

private:
    QHash<com_defs::TargetTextures::Textures, GLuint> m_texturesIds;  //! Render target textures ids, by default all are 0.
    QHash<com_defs::TargetTextures::Textures, GLenum> m_attachments;  //! Render target textures attachments, by default all are 0.

    GLuint      m_name;         //! Autogenerated render target name.
};

#endif // RENDERTARGET_H
